#!/bin/bash

# Step 1: Gather user input for necessary paths and choices
echo "Enter the path to your initial Ansible hosts file (inventory):"
read -r INITIAL_HOSTS_FILE

echo "Enter the path where you want to save the list of impacted hosts:"
read -r IMPACTED_HOSTS_FILE

echo "Do you want to automatically run the fix playbook on impacted hosts? (yes/no):"
read -r RUN_FIX

echo "Enter the path to save the final remediation report:"
read -r FINAL_REPORT_PATH

PLAYBOOK_DIR="./cve_2024_3094_playbooks"
mkdir -p "$PLAYBOOK_DIR"

# Step 2: Create the check vulnerability playbook
cat << EOF > "$PLAYBOOK_DIR/check_vulnerability.yml"
---
- name: Identify Vulnerable Hosts for CVE-2024-3094
  hosts: all
  become: yes
  tasks:
    - name: Gather package facts from all hosts
      ansible.builtin.package_facts:
        manager: auto
    - name: Check for vulnerable xz-utils version
      set_fact:
        is_vulnerable: "{{ 'xz' in ansible_facts.packages and ansible_facts.packages['xz'][0].version in ['5.6.0', '5.6.1'] }}"
    - name: Create a list of vulnerable hosts
      lineinfile:
        path: "$IMPACTED_HOSTS_FILE"
        line: "{{ inventory_hostname }}"
        create: yes
      when: is_vulnerable
      delegate_to: localhost
      run_once: true
EOF

# Step 3: Create the fix vulnerability playbook
cat << EOF > "$PLAYBOOK_DIR/fix_vulnerable_hosts.yml"
---
- name: Remediate CVE-2024-3094 on Identified Vulnerable Hosts and Generate Report
  hosts: all
  become: yes
  vars:
    report_path: "$FINAL_REPORT_PATH"
    stable_version: "5.4.6"
    stable_version_url: "https://excellmedia.dl.sourceforge.net/project/lzmautils/xz-5.4.6.tar.bz2"
    xz_downloaded: "/tmp/xz-\${stable_version}.tar.bz2"
  tasks:
    - name: Check for 'make' and 'gcc' installation
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
      loop:
        - make
        - gcc

    - name: Attempt to upgrade xz-utils to the latest version
      ansible.builtin.package:
        name: xz
        state: latest
      register: upgrade_result

    - name: Attempt to downgrade xz-utils if upgrade fails
      block:
        - name: Download xz-utils version 5.4.6
          get_url:
            url: "{{ stable_version_url }}"
            dest: "{{ xz_downloaded }}"
          when: upgrade_result is failed

        - name: Extract and install xz-utils version 5.4.6
          command: tar -xjf "{{ xz_downloaded }}" -C /tmp && cd /tmp/xz-{{ stable_version }} && ./configure && make && make install
          args:
            creates: "/usr/local/bin/xz"
          when: upgrade_result is failed
      register: downgrade_result

    - name: Compile success results for reporting and suggest restarting sshd
      lineinfile:
        path: "{{ report_path }}"
        line: "Host {{ inventory_hostname }}: xz-utils processed. Consider restarting sshd."
        create: yes
      when: upgrade_result.changed or downgrade_result is defined and downgrade_result.changed

    - name: Note hosts requiring manual intervention in the report
      lineinfile:
        path: "{{ report_path }}"
        line: "Host {{ inventory_hostname }}: Manual effort needed to remediate xz-utils."
        create: yes
      when: not upgrade_result.changed and (downgrade_result is not defined or not downgrade_result.changed)
EOF

# Step 4: Execute the playbooks based on user choices
echo "Ansible playbook files have been set up in $PLAYBOOK_DIR."

if [[ "$RUN_FIX" == "yes" ]]; then
    ansible-playbook -i "$INITIAL_HOSTS_FILE" "$PLAYBOOK_DIR/check_vulnerability.yml" && \
    ansible-playbook -i "$IMPACTED_HOSTS_FILE" "$PLAYBOOK_DIR/fix_vulnerable_hosts.yml"
    echo "Playbooks executed. Check $FINAL_REPORT_PATH for the remediation report."
else
    echo "To check for vulnerable hosts, run:"
    echo "ansible-playbook -i $INITIAL_HOSTS_FILE $PLAYBOOK_DIR/check_vulnerability.yml"
    echo "After reviewing the generated 'vulnerable_hosts.ini', to fix vulnerable hosts, run:"
    echo "ansible-playbook -i $IMPACTED_HOSTS_FILE $PLAYBOOK_DIR/fix_vulnerable_hosts.yml"
    echo "A report of the remediation process will be saved in $FINAL_REPORT_PATH."
fi
